<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema elementFormDefault="qualified"
	targetNamespace="http://safe.epcc.ed.ac.uk/substitute"
	xmlns="http://safe.epcc.ed.ac.uk/substitute"
	xmlns:par="http://safe.epcc.ed.ac.uk/parameter"
	xmlns:mac="http://safe.epcc.ed.ac.uk/macro"
	xmlns:ato="http://safe.epcc.ed.ac.uk/atom"
	xmlns:res="http://safe.epcc.ed.ac.uk/restrict"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	xmlns:per="http://safe.epcc.ed.ac.uk/period">

    <xsd:import namespace="http://safe.epcc.ed.ac.uk/parameter"
		schemaLocation="parameter.xsd" />

	<xsd:import namespace="http://safe.epcc.ed.ac.uk/macro"
		schemaLocation="macro.xsd" />

	<xsd:import namespace="http://safe.epcc.ed.ac.uk/atom"
		schemaLocation="atom.xsd" />

	<xsd:import namespace="http://safe.epcc.ed.ac.uk/restrict"
		schemaLocation="restrict.xsd" />
	<xsd:import schemaLocation="period.xsd" namespace="http://safe.epcc.ed.ac.uk/period"></xsd:import>
	<xsd:annotation>
		<xsd:documentation>
			This schema defines types for text that may result from a
			previous processing step. It therefore may be constant text
			or a schema element from the previous transform
		</xsd:documentation>
	</xsd:annotation>
	<xsd:complexType name="TextOrParameterType" mixed="true">
        <xsd:annotation>
        	<xsd:documentation>Type for text elements that may contain substitution elements</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
	<xsd:extension base="TextExtensionBase">
		<xsd:choice maxOccurs="unbounded" minOccurs="0">
			<xsd:element ref="par:Parameter"></xsd:element>
			<xsd:element ref="par:ParameterRef"></xsd:element>
			<xsd:element ref="mac:Macro"></xsd:element>
			<xsd:element ref="Text" />
		</xsd:choice>
		</xsd:extension>
	</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="NumberOrParameterType" mixed="true">
        <xsd:annotation>
        	<xsd:documentation>Type for numeric values that may be generated by substitution elements</xsd:documentation>
        </xsd:annotation>
        <xsd:choice maxOccurs="1" minOccurs="0">
			<xsd:element ref="par:Parameter"></xsd:element>
			<xsd:element ref="par:ParameterRef"></xsd:element>
			<xsd:group ref="ato:NumberGroup" />
			<xsd:element ref="ato:Numeric"/>
			<xsd:element ref="mac:Macro"></xsd:element>
		</xsd:choice>
	</xsd:complexType>
	
<xsd:group name="Content">
		<xsd:annotation>
			<xsd:documentation>
				This group should contain substitution elements that may
				get replaced with XML elements. Later schema can include
				this as possible content. This works best where element
				order and count are not bounded. ie a group with
				minOccurs=0 maxOccurs=unbounded containing a choice
				element.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element ref="par:Parameter" />
			<xsd:element ref="par:ParameterRef" />
			<xsd:element ref="par:FormatParameter" />
			<xsd:element ref="par:Repeat" />
			<xsd:element ref="par:For" />
			<xsd:element ref="mac:Macro" />
			<xsd:element ref="mac:Switch" />
			<xsd:element ref="par:IfSet" />
			<xsd:element ref="par:Optional" />
			<xsd:element ref="res:RestrictedSection" />
		</xsd:choice>
	</xsd:group>	

<xsd:complexType name="TextExtensionBase" abstract="true">

	<xsd:annotation>
		<xsd:documentation>An abstract base type for text substitution
			elements added by custom schema
		</xsd:documentation>
	</xsd:annotation>
</xsd:complexType>
    	

 <xsd:element name="Text" type="TextExtensionBase" >
 <xsd:annotation>
 <xsd:documentation>
 An abstract element that stands in for any extension element that generates text
 </xsd:documentation>
 </xsd:annotation>
 
 </xsd:element>

    	
</xsd:schema>