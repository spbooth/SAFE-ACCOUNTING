// Copyright - The University of Edinburgh 2011
/*******************************************************************************
 * Copyright (c) - The University of Edinburgh 2010
 *******************************************************************************/
package uk.ac.ed.epcc.safe.accounting;


import uk.ac.ed.epcc.safe.accounting.properties.PropertyTag;
import uk.ac.ed.epcc.webapp.Tagged;

/** Interface implemented by classes that can provide Usage information to the reports.
 * 
 * This interface is intended to be implementable by composite objects that combine multiple tables.
 * 
 * 
 * @author spb
 * @param <UR> 
 *
 */
public interface UsageProducer<UR extends UsageRecord> extends ExpressionTargetGenerator<UR>, Tagged, ReductionProducer<UR>{

	
	
	/** Does this class support the specified property. A false return 
	 * value is a definitive statement that the property will not be available in any records 
	 * this UsageProducer retrieves from the database though the properties may exist during the
	 * parse phase.
	 * 
	 * A true return value indicates that some of the records returned may contain the specified property.
	 * 
	 * 
	 * @param tag
	 * @return boolean
	 */
	public <X> boolean hasProperty(PropertyTag<X> tag);
	
	    
    /** Return a text description of how the property is implemented. 
     * if the object is composite this may generate a list of different implementations.
     * @param tag PropertyTag
     * @return String
     */
    public String getImplemenationInfo(PropertyTag<?> tag);		    
  
  
	
//	/** Generate a unique ID string for a record 
//	 * 
//	 * @param r
//	 * @return String
//	 * @throws Exception
//	 */
//	public abstract String xgetUniqueID(UR r) throws Exception;
//	
//	/** Could this record be generated by this class.
//	 * 
//	 * @param record
//	 * @return boolean
//	 */
//	public abstract boolean isMyRecord(UsageRecord record);
}