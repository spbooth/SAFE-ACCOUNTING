<?xml version="1.0" encoding="UTF-8"?>
<!--| Copyright - The University of Edinburgh 2015                             |-->
<!--|                                                                          |-->
<!--| Licensed under the Apache License, Version 2.0 (the "License");          |-->
<!--| you may not use this file except in compliance with the License.         |-->
<!--| You may obtain a copy of the License at                                  |-->
<!--|                                                                          |-->
<!--|    http://www.apache.org/licenses/LICENSE-2.0                            |-->
<!--|                                                                          |-->
<!--| Unless required by applicable law or agreed to in writing, software      |-->
<!--| distributed under the License is distributed on an "AS IS" BASIS,        |-->
<!--| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. |-->
<!--| See the License for the specific language governing permissions and      |-->
<!--| limitations under the License.                                           |-->
<?xml-stylesheet type="text/xsl" href="../stylesheets/xs3p/xs3p.xsl"?>
<xsd:schema elementFormDefault="qualified"
	targetNamespace="http://safe.epcc.ed.ac.uk/table"
	xmlns="http://safe.epcc.ed.ac.uk/table"
	xmlns:par="http://safe.epcc.ed.ac.uk/substitute"
	xmlns:fil="http://safe.epcc.ed.ac.uk/filter"
	xmlns:per="http://safe.epcc.ed.ac.uk/period"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:Q1="http://safe.epcc.ed.ac.uk/atom"
	xmlns:Q2="http://safe.epcc.ed.ac.uk/parameter" 
	xmlns:prop="http://safe.epcc.ed.ac.uk/propexpression">

	<xsd:import namespace="http://safe.epcc.ed.ac.uk/substitute"
		schemaLocation="substitute.xsd" />

	<xsd:import namespace="http://safe.epcc.ed.ac.uk/period"
		schemaLocation="period.xsd" />

	<xsd:import namespace="http://safe.epcc.ed.ac.uk/filter"
		schemaLocation="filter.xsd" />
	<xsd:import namespace="http://safe.epcc.ed.ac.uk/parameter"
		schemaLocation="parameter.xsd" />

	<xsd:import schemaLocation="propexpression.xsd" namespace="http://safe.epcc.ed.ac.uk/propexpression"></xsd:import>

	<xsd:annotation><xsd:documentation>
	Schema for template generation in reports.
	</xsd:documentation></xsd:annotation>

	<xsd:complexType name="ColumnType">
		<xsd:sequence>
			<xsd:choice>
			<xsd:element name="Name" type="par:TextOrParameterType"
				minOccurs="0" maxOccurs="1" />
			<xsd:element name="NameExpression" type="prop:PropExpressionType"
				minOccurs="1" maxOccurs="1" />
			</xsd:choice>
			<xsd:element name="Property" type="prop:PropExpressionType"
				minOccurs="1" maxOccurs="1" />
		</xsd:sequence>
		
	</xsd:complexType>

	<xsd:group name="TableColumns">
		<xsd:choice>
			<xsd:element name="Column" type="ColumnType" />
		</xsd:choice>
	</xsd:group>

	<xsd:group name="SummaryTableColumns">
		<xsd:annotation>
			   <xsd:documentation>
			     Set of possible column definitions for a summary type table.
			   </xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="Index" type="IndexType" >
			<xsd:annotation><xsd:documentation>A group-by index for the table, The distinct tuples of index values define the rows of the resulting table. Records where the index value resolves to null are excluded.</xsd:documentation></xsd:annotation>
			</xsd:element>
			<xsd:element name="Column" type="IndexType" >
			<xsd:annotation><xsd:documentation>A group-by index for the table, The distinct tuples of index values define the rows of the resulting table. Records where the index value resolves to null are allowed.</xsd:documentation></xsd:annotation>
			</xsd:element>
			<xsd:element name="SumColumn" type="ColumnType" >
			<xsd:annotation><xsd:documentation>A SUM reduction of a numerical expression</xsd:documentation></xsd:annotation>
			</xsd:element>
			<xsd:element name="AverageColumn" type="ColumnType" >
			<xsd:annotation><xsd:documentation>A AVERAGE reduction of a numerical expression. When time bound overlap is in force this becomes the time-average.</xsd:documentation></xsd:annotation>
			</xsd:element>
			<xsd:element name="MinColumn" type="ColumnType" >
			<xsd:annotation><xsd:documentation>A Minimum reduction of a numerical or date expression</xsd:documentation></xsd:annotation>
			</xsd:element>
			<xsd:element name="MaxColumn" type="ColumnType" >
			<xsd:annotation><xsd:documentation>A Maximum reduction of a numerical or date expression.</xsd:documentation></xsd:annotation>
			</xsd:element>
			<xsd:element name="CountDistinctColumn" type="ColumnType" >
			<xsd:annotation><xsd:documentation>A count of the number of different values the expression takes.</xsd:documentation></xsd:annotation>
			</xsd:element>
		</xsd:choice>
	</xsd:group>

	<xsd:complexType name="PercentColumnType">
		<xsd:all>
			<xsd:element ref="fil:Filter" minOccurs="0" maxOccurs="1" />
			<xsd:element name="Name" type="par:TextOrParameterType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="Column" type="par:TextOrParameterType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="MaximumFractionDigits"
				type="par:TextOrParameterType" maxOccurs="1" minOccurs="0">
			</xsd:element>
			<xsd:element name="MinimumFractionDigits"
				type="par:TextOrParameterType" maxOccurs="1" minOccurs="0">
			</xsd:element>
			<xsd:element name="TotalOver"
				type="par:NumberOrParameterType" minOccurs="0" maxOccurs="1" />
		</xsd:all>
	</xsd:complexType>

	<xsd:complexType name="TotalColumnType">
		<xsd:all>
			<xsd:element name="Name" type="par:TextOrParameterType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="Column" type="par:TextOrParameterType"
				minOccurs="1" maxOccurs="1" />
		</xsd:all>
	</xsd:complexType>

	<xsd:complexType name="CategoryTotalsType">
		<xsd:all>
			<xsd:element name="Category" type="par:TextOrParameterType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="Column" type="par:TextOrParameterType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="Label" type="par:TextOrParameterType"
				maxOccurs="1" minOccurs="0">
			</xsd:element>
			<xsd:element name="Highlight" type="xsd:boolean"
				maxOccurs="1" minOccurs="0">
			</xsd:element>
			<xsd:element name="KeyTransform" type="par:TextOrParameterType"
				minOccurs="0" maxOccurs="1"/>
		</xsd:all>
	</xsd:complexType>

<xsd:complexType name="CategorySetType">
		<xsd:all>
			<xsd:element name="Category" type="par:TextOrParameterType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="Column" type="par:TextOrParameterType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="KeyTransform" type="par:TextOrParameterType"
				minOccurs="0" maxOccurs="1"/>
			<xsd:element name="ValueTransform" type="par:TextOrParameterType"
				minOccurs="0" maxOccurs="1"/>
		</xsd:all>
	</xsd:complexType>

	<xsd:group name="FormattingInstructions">
	   <xsd:annotation><xsd:documentation>These are transformations and formatting applied after the data has been retrieved.</xsd:documentation></xsd:annotation>
	   <xsd:choice>
	   	<xsd:element name="TableFormat" type="xsd:string"
	   		minOccurs="0" maxOccurs="1" />
	   	<xsd:element name="SkipRows" type="par:TextOrParameterType"
	   		minOccurs="0" maxOccurs="1" />
	   	<xsd:element name="MaxRows" type="par:TextOrParameterType"
	   		minOccurs="0" maxOccurs="1" />
	   	<xsd:element name="Warning" type="par:TextOrParameterType"
	   		minOccurs="0" maxOccurs="1" />
	   	<xsd:element name="SortBy" minOccurs="0" maxOccurs="1">
	   		<xsd:complexType>
	   			<xsd:sequence>
	   				<xsd:element name="Columns"
	   					type="par:TextOrParameterType" minOccurs="1" maxOccurs="1" />
	   				<xsd:element name="Comparators"
	   					type="par:TextOrParameterType" minOccurs="0" maxOccurs="1" />
	   				<xsd:element name="Reverse"
	   					type="par:TextOrParameterType" minOccurs="0" maxOccurs="1" />
	   			</xsd:sequence>
	   		</xsd:complexType>
	   	</xsd:element>
	   	<xsd:element name="Set">
	   		<xsd:complexType>
	   			<xsd:all>
	   				<xsd:element name="Column"
	   					type="par:TextOrParameterType" />
	   				<xsd:element name="Row"
	   					type="par:TextOrParameterType" />
	   				<xsd:element name="Value"
	   					type="par:TextOrParameterType" />
	   			</xsd:all>
	   		</xsd:complexType>
	   	</xsd:element>
	   	<xsd:element name="SetColumnAt">
	   		<xsd:complexType>
	   			<xsd:all>
	   				<xsd:element name="Column"
	   					type="par:TextOrParameterType" />
	   				<xsd:element name="At"
	   					type="par:TextOrParameterType" />
	   			</xsd:all>
	   		</xsd:complexType>
	   	</xsd:element>
	   	<xsd:element name="SetColumnAfter">
	   		<xsd:complexType>
	   			<xsd:all>
	   				<xsd:element name="Column"
	   					type="par:TextOrParameterType" />
	   				<xsd:element name="After"
	   					type="par:TextOrParameterType" />
	   			</xsd:all>
	   		</xsd:complexType>
	   	</xsd:element>
	   	<xsd:element name="SetColumnLast">
	   		<xsd:complexType>
	   			<xsd:sequence>
	   				<xsd:element name="Column"
	   					type="par:TextOrParameterType" />
	   			</xsd:sequence>
	   		</xsd:complexType>
	   	</xsd:element>
	   	<xsd:element name="SetRowAt">
	   		<xsd:complexType>
	   			<xsd:all>
	   				<xsd:element name="Row"
	   					type="par:TextOrParameterType" />
	   				<xsd:element name="At"
	   					type="par:TextOrParameterType" />
	   			</xsd:all>
	   		</xsd:complexType>
	   	</xsd:element>
	   	<xsd:element name="SetRowAfter">
	   		<xsd:complexType>
	   			<xsd:all>
	   				<xsd:element name="Row"
	   					type="par:TextOrParameterType" />
	   				<xsd:element name="After"
	   					type="par:TextOrParameterType" />
	   			</xsd:all>
	   		</xsd:complexType>
	   	</xsd:element>
	   	<xsd:element name="SetRowLast">
	   		<xsd:complexType>
	   			<xsd:sequence>
	   				<xsd:element name="Row"
	   					type="par:TextOrParameterType" />
	   			</xsd:sequence>
	   		</xsd:complexType>
	   	</xsd:element>
	   	<xsd:element name="Remove" type="RemoveType">
	   		<xsd:annotation>
	   			<xsd:documentation>
	   				Remove a specified row or column from the table.
	   				Normally used to remove scratch data used in
	   				CombineColumn.
	   			</xsd:documentation>
	   		</xsd:annotation>
	   	</xsd:element>
	   	<xsd:element name="Format" type="FormatType"></xsd:element>
	   	<xsd:element name="Transform" type="FormatType">
	   	</xsd:element>
	   	<xsd:element name="TransformKeys" type="FormatType">
	   	</xsd:element>
	   	<xsd:element name="NumberFormat" type="NumberFormatType">
	   		<xsd:annotation>
	   			<xsd:documentation>
	   				Specify the formatting for numerical data.
	   			</xsd:documentation>
	   		</xsd:annotation>
	   	</xsd:element>
	   	<xsd:element name="PercentFormat" type="PercentFormatType">
	   		<xsd:annotation>
	   			<xsd:documentation>
	   				Format fractional data in a column as a
	   				percentage.
	   			</xsd:documentation>
	   		</xsd:annotation>
	   	</xsd:element>
	   	<xsd:element name="DateFormat" type="DateFormatType">
	   		<xsd:annotation>
	   			<xsd:documentation>
	   				Format column data as a date.
	   			</xsd:documentation>
	   		</xsd:annotation>
	   	</xsd:element>
	   	<xsd:element name="PercentColumn" type="PercentColumnType">
	   		<xsd:annotation>
	   			<xsd:documentation>
	   				Add a new column presenting an existing column as
	   				a percentage of some value.
	   			</xsd:documentation>
	   		</xsd:annotation>
	   	</xsd:element>
	   	<xsd:element name="TotalColumn" type="TotalColumnType">
	   		<xsd:annotation>
	   			<xsd:documentation>
	   				Add a total value to an existing column.
	   			</xsd:documentation>
	   		</xsd:annotation>
	   	</xsd:element>
	   	<xsd:element name="CategoryTotals" type="CategoryTotalsType" />
	   	<xsd:element name="CategorySet" type="CategorySetType" />
	   	<xsd:element name="CombineColumn" type="CombineType"></xsd:element>
	   	<xsd:element name="KeyName" type="KeyNameType" maxOccurs="1" minOccurs="0">
	   		<xsd:annotation>
	   			<xsd:documentation>
	   				Set the name of the table key. Normally keys are
	   				not shown and in many cases are not human
	   				readable. Setting this value shows the key values
	   				as the first column with the specified name.
	   			</xsd:documentation>
	   		</xsd:annotation>
	   	</xsd:element>
	   	<xsd:element name="MergeRows" type="MergeRowType">
	   		<xsd:annotation>
	   			<xsd:documentation>
	   				Merge rows based on values in a column. These
	   				become the new row keys. This actually makes a
	   				new table so formats may be lost.
	   			</xsd:documentation>
	   		</xsd:annotation>
	   	</xsd:element>
	   	<xsd:element name="PrintHeadings" type="PrintHeadingsType">
	   	</xsd:element>
	   	<xsd:element name="ThresholdRows" type="ThresholdRowsType"></xsd:element>
	   </xsd:choice>
	</xsd:group>

	<xsd:complexType name="DateType">
		<xsd:choice>
			<xsd:sequence>
				<xsd:element name="Property"
					type="prop:PropExpressionType" minOccurs="1" maxOccurs="1" />
			</xsd:sequence>
			<xsd:sequence>
				<xsd:element name="StartProperty"
					type="prop:PropExpressionType" minOccurs="1" maxOccurs="1" />
				<xsd:element name="EndProperty"
					type="prop:PropExpressionType" minOccurs="1" maxOccurs="1" />
				<xsd:element name="NoOverlap" minOccurs="0" maxOccurs="1" >
				<xsd:annotation><xsd:documentation>Disable overlap calculation even thought there are two time bounds</xsd:documentation></xsd:annotation>
				<xsd:complexType></xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:sequence>
				<xsd:element name="AllTimes">
				<xsd:annotation><xsd:documentation>No default time filter</xsd:documentation></xsd:annotation>
					<xsd:complexType></xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:choice>
	</xsd:complexType>

	<xsd:group name="AnyTable">
	<xsd:choice>
	<xsd:element ref="Table"/>
	<xsd:element ref="SummaryTable"/>
	<xsd:element ref="CompoundTable"/>
	<xsd:element ref="ObjectTable"/>
	<xsd:element ref="SummaryObjectTable"/>
	</xsd:choice>
	</xsd:group>
	<xsd:element name="Table">
		<xsd:annotation>
			   <xsd:documentation>
			     A version of ObjectTable where the data comes from a UsageProducer. In this case there is an
			     implicit time filter on the records based on the active reporting period. This is normally used
			     for generating a table of jobs that ran in the reporting period. 
			   </xsd:documentation>
			</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="per:Period" minOccurs="0"
					maxOccurs="1" />
				<xsd:element name="DefaultPropertyList" maxOccurs="1" minOccurs="0">
				<xsd:annotation><xsd:documentation>Take the property list from configuration parameters</xsd:documentation></xsd:annotation>
				<xsd:complexType><xsd:sequence></xsd:sequence></xsd:complexType></xsd:element>
				<xsd:group ref="TableContent" minOccurs="0"
					maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ObjectTable">
			<xsd:annotation>
			   <xsd:documentation>
			     An ObjectTable is a table where each row corresponds to a selected object and columns are generated by expressions on the objects properties.
			   </xsd:documentation>
			</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="fil:ObjectSet" minOccurs="1"
					maxOccurs="1" />
				<xsd:group ref="ObjectTableContent" minOccurs="0"
					maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:group name="TableContent">
		<xsd:choice>
			<xsd:element ref="fil:Filter" minOccurs="0"
				maxOccurs="unbounded" />
			<xsd:group ref="TableColumns" minOccurs="0"
				maxOccurs="unbounded" />
			<xsd:group ref="FormattingInstructions" minOccurs="0"
				maxOccurs="unbounded" />
		</xsd:choice>
	</xsd:group>
	<xsd:group name="ObjectTableContent">
		<xsd:choice>
			<xsd:group ref="TableColumns" minOccurs="0"
				maxOccurs="unbounded" />
			<xsd:group ref="FormattingInstructions" minOccurs="0"
				maxOccurs="unbounded" />
		</xsd:choice>
	</xsd:group>
	<xsd:element name="SummaryTable">
	<xsd:annotation>
			   <xsd:documentation>
			     A SummaryTable is a version of SummaryObjectTable for use with UsageProducer data. In this case
			     there is an implicit time filter selecting records based on the reporting period.
			     If two time bound properties are specified the reductions will use overlap calculations to re-scale
			     the values of records that cross the reporting period boundaries.
			   </xsd:documentation>
			</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="per:Period" minOccurs="0"
					maxOccurs="1" />
				<xsd:element name="Date" type="DateType" minOccurs="0"
					maxOccurs="1" />
				<xsd:group ref="SummaryContent" minOccurs="0"
					maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="SummaryObjectTable">
		<xsd:annotation>
			   <xsd:documentation>
			     A SummaryObjectTable is a table where the data is generated as reductions over the matching records.
			   </xsd:documentation>
			</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="fil:ObjectSet" minOccurs="1"
					maxOccurs="1" />
				<xsd:group ref="SummaryContent" minOccurs="0"
					maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:group name="SummaryContent">
		<xsd:choice>
			<!--  Parameter might expand to period or filter -->
			<xsd:group ref="par:Content" minOccurs="0"
				maxOccurs="unbounded" />
			<xsd:element ref="fil:Filter" minOccurs="0"
				maxOccurs="unbounded" />
			<xsd:group ref="SummaryTableColumns" minOccurs="0"
				maxOccurs="unbounded" />
			<xsd:group ref="FormattingInstructions" minOccurs="0"
				maxOccurs="unbounded" />
		</xsd:choice>
	</xsd:group>
	<xsd:group name="CompoundContent">
		<xsd:choice>
			<xsd:element ref="CompoundTable" />
			<xsd:element ref="Table" />
			<xsd:element ref="SummaryTable" />
			<xsd:element ref="ObjectTable" />
			<xsd:element ref="SummaryObjectTable" />
			<!--  Actually this could be other repeated table content -->
			<xsd:group ref="par:Content" />
			<xsd:element ref="fil:Filter" />
			<xsd:group ref="FormattingInstructions" />
		</xsd:choice>
	</xsd:group>

	<xsd:element name="CompoundTable">
		<xsd:annotation>
			   <xsd:documentation>
			      A compound table allows table content to be generated in multiple passes and then
			      formatted as a single unit. For example to generate columns of data from different time periods.
			      The keys uses in the component tables need to be compatible to merge data into the same row.
			   </xsd:documentation>
			</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>

				<xsd:group ref="CompoundContent" minOccurs="0"
					maxOccurs="unbounded" />


			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>


	<xsd:complexType name="RemoveType">
		<xsd:choice>
			<xsd:element name="Column" type="par:TextOrParameterType"></xsd:element>
			<xsd:element name="Row" type="par:TextOrParameterType"></xsd:element>
		</xsd:choice>
	</xsd:complexType>

	<xsd:complexType name="FormatType">
		<xsd:all>
			<xsd:element name="Column" type="par:TextOrParameterType"></xsd:element>
			<xsd:element name="Type" type="par:TextOrParameterType"></xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="NumberFormatType">
		<xsd:all>
			<xsd:element name="Column" type="par:TextOrParameterType"
				maxOccurs="1" minOccurs="1">
			</xsd:element>
			<xsd:element name="MaximumIntegerDigits"
				type="par:TextOrParameterType" maxOccurs="1" minOccurs="0">
			</xsd:element>
			<xsd:element name="MinimumIntegerDigits"
				type="par:TextOrParameterType" maxOccurs="1" minOccurs="0">
			</xsd:element>
			<xsd:element name="MaximumFractionDigits"
				type="par:TextOrParameterType" maxOccurs="1" minOccurs="0">
			</xsd:element>
			<xsd:element name="MinimumFractionDigits"
				type="par:TextOrParameterType" maxOccurs="1" minOccurs="0">
			</xsd:element>

		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="PercentFormatType">
		<xsd:all>
			<xsd:element name="Column" type="par:TextOrParameterType"
				maxOccurs="1" minOccurs="1">
			</xsd:element>
			<xsd:element name="MaximumFractionDigits"
				type="par:TextOrParameterType" maxOccurs="1" minOccurs="0">
			</xsd:element>
			<xsd:element name="MinimumFractionDigits"
				type="par:TextOrParameterType" maxOccurs="1" minOccurs="0">
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="CombineType">
		<xsd:all>
			<xsd:element name="Dest" type="par:TextOrParameterType"></xsd:element>
			<xsd:element name="Arg1" type="par:TextOrParameterType"></xsd:element>
			<xsd:element name="Arg2" type="par:TextOrParameterType"></xsd:element>
			<xsd:element name="Operator"
				type="par:TextOrParameterType">
			</xsd:element>
		</xsd:all>
	</xsd:complexType>

	<xsd:complexType name="DateFormatType">
		<xsd:all>
			<xsd:element name="Column" type="par:TextOrParameterType"
				maxOccurs="1" minOccurs="1">
			</xsd:element>
			<xsd:element name="Format" type="par:TextOrParameterType"
				maxOccurs="1" minOccurs="0">
			</xsd:element>

			<xsd:element name="Timezone" type="par:TextOrParameterType"
				maxOccurs="1" minOccurs="0">
			</xsd:element>
		</xsd:all>
	</xsd:complexType>

	<xsd:complexType name="KeyNameType">
		<xsd:sequence>
			<xsd:element name="Name" type="par:TextOrParameterType"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="MergeRowType">
		<xsd:sequence>
			<xsd:element name="NewKey" type="par:TextOrParameterType"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="PrintHeadingsType">
		<xsd:sequence>
			<xsd:element name="Value" type="par:TextOrParameterType"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="IndexType">
		<xsd:complexContent>
			<xsd:extension base="ColumnType">
				<xsd:attribute name="labeller" type="xsd:string" use="optional"></xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="ThresholdRowsType">
		<xsd:all>
			<xsd:element name="Column" type="par:TextOrParameterType"
				maxOccurs="1" minOccurs="1">
			</xsd:element>
			<xsd:element name="Minimum"
				type="par:TextOrParameterType" maxOccurs="1" minOccurs="0">
			</xsd:element>
			<xsd:element name="Maximum"
				type="par:TextOrParameterType" maxOccurs="1" minOccurs="0">
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
</xsd:schema>